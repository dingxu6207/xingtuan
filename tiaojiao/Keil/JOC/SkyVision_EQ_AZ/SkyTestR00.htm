<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\SkyVision\SkyTestR00.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\SkyVision\SkyTestR00.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.1 [Build 934]: Last Updated: Tue Apr 21 17:15:55 2009
<BR><P>
<H3>Maximum Stack Usage =       1424 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GotoAZ &rArr; FCalStarAEPos &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c832e0]">Reset_Handler</a>
 <LI><a href="#[c83328]">__user_initial_stackheap</a>
 <LI><a href="#[c835b0]">Undef_Handler</a>
 <LI><a href="#[c83568]">SWI_Handler</a>
 <LI><a href="#[c83520]">PAbt_Handler</a>
 <LI><a href="#[c834d8]">DAbt_Handler</a>
 <LI><a href="#[c83490]">IRQ_Handler</a>
 <LI><a href="#[c83448]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c835b0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c835b0]">Undef_Handler</a><BR>
 <LI><a href="#[c83568]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c83568]">SWI_Handler</a><BR>
 <LI><a href="#[c83520]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c83520]">PAbt_Handler</a><BR>
 <LI><a href="#[c834d8]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c834d8]">DAbt_Handler</a><BR>
 <LI><a href="#[c83490]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c83490]">IRQ_Handler</a><BR>
 <LI><a href="#[c83448]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c83448]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c832e0]">Reset_Handler</a>
 <LI><a href="#[c835b0]">Undef_Handler</a>
 <LI><a href="#[c83568]">SWI_Handler</a>
 <LI><a href="#[c83520]">PAbt_Handler</a>
 <LI><a href="#[c834d8]">DAbt_Handler</a>
 <LI><a href="#[c83490]">IRQ_Handler</a>
 <LI><a href="#[c83448]">FIQ_Handler</a>
 <LI><a href="#[10a6538]">__main</a>
 <LI><a href="#[10c76e0]">__ARM_get_argv</a>
 <LI><a href="#[10af198]">IRQ_UART1</a>
 <LI><a href="#[10af228]">Timer0ISR</a>
 <LI><a href="#[10af1e0]">RTC_ISR</a>
 <LI><a href="#[10d0648]">_sputc</a>
 <LI><a href="#[10ab9e8]">main</a>
 <LI><a href="#[10cb2e0]">_printf_outstr_char</a>
 <LI><a href="#[10cb168]">_printf_input_char</a>
 <LI><a href="#[10cb048]">_sgetc</a>
 <LI><a href="#[10cb000]">_sbackspace</a>
 <LI><a href="#[10cc550]">isspace</a>
 <LI><a href="#[10c8948]">__I_use_semihosting</a>
 <LI><a href="#[10c82c8]">_get_lc_ctype</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c832e0]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[10a6538]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = __main &rArr; __rt_entry &rArr; __rt_lib_init &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[10c2fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[10c2fb8]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[10a6538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[10c2f70]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[10c2f28]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10c3228]"></a>__decompress</STRONG> (ARM, 96 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[10c31e0]"></a>__decompress2</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[10c2ce8]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[10ca4b8]"></a>__ARM_argv_veneer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[c83328]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d1ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[10af7c8]"></a>LCDWD</STRONG> (ARM, 184 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPhase
<LI><a href="#[10aed18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDtst
<LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
<LI><a href="#[10af420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispUn
<LI><a href="#[10af468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCh
<LI><a href="#[10af4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp8x8
<LI><a href="#[10af738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRfrsh
</UL>

<P><STRONG><a name="[10af780]"></a>LCDWC</STRONG> (ARM, 184 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPhase
<LI><a href="#[10aed18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDtst
<LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
<LI><a href="#[10af420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispUn
<LI><a href="#[10af468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCh
<LI><a href="#[10af4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp8x8
<LI><a href="#[10af618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDContrast
<LI><a href="#[10af6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[10af738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRfrsh
</UL>

<P><STRONG><a name="[10af738]"></a>LCDRfrsh</STRONG> (ARM, 88 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCDRfrsh
</UL>
<BR>[Calls]<UL><LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
<LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
<LI><a href="#[10af6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[10af6f0]"></a>LCDInit</STRONG> (ARM, 176 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCDInit &rArr; LCDRfrsh
</UL>
<BR>[Calls]<UL><LI><a href="#[10af738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRfrsh
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
</UL>
<BR>[Called By]<UL><LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10af6a8]"></a>LCDBacklight</STRONG> (ARM, 80 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LCDBacklight
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyXH
<LI><a href="#[10ac138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyUp
<LI><a href="#[10ac180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyDown
<LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10af660]"></a>Eyelight</STRONG> (ARM, 80 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[10af618]"></a>LCDContrast</STRONG> (ARM, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCDContrast
</UL>
<BR>[Calls]<UL><LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
</UL>
<BR>[Called By]<UL><LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10af5d0]"></a>ZFIndex</STRONG> (ARM, 124 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ZFIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
<LI><a href="#[10af420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispUn
</UL>

<P><STRONG><a name="[10af588]"></a>MSPI_Init</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10af540]"></a>MSPI_SendData</STRONG> (ARM, 48 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
<LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
<LI><a href="#[10af420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispUn
<LI><a href="#[10af4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp8x8
</UL>

<P><STRONG><a name="[10af4f8]"></a>Disp8x8</STRONG> (ARM, 436 bytes, Stack size 44 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Disp8x8
</UL>
<BR>[Calls]<UL><LI><a href="#[10af540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
</UL>

<P><STRONG><a name="[10af4b0]"></a>DispEn</STRONG> (ARM, 100 bytes, Stack size 28 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DispEn &rArr; Disp8x8
</UL>
<BR>[Calls]<UL><LI><a href="#[10af4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp8x8
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
<LI><a href="#[10ad0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShow
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
<LI><a href="#[10aec88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTst
</UL>

<P><STRONG><a name="[10af468]"></a>DispCh</STRONG> (ARM, 184 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DispCh
</UL>
<BR>[Calls]<UL><LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
<LI><a href="#[10ad0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShow
</UL>

<P><STRONG><a name="[10af420]"></a>DispUn</STRONG> (ARM, 2236 bytes, Stack size 76 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10af540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
<LI><a href="#[10af5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZFIndex
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>

<P><STRONG><a name="[10af3d8]"></a>DispCn</STRONG> (ARM, 2144 bytes, Stack size 92 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DispCn &rArr; ZFIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[10af540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
<LI><a href="#[10af5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZFIndex
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
<LI><a href="#[10aecd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTst
</UL>

<P><STRONG><a name="[10af390]"></a>DispLP</STRONG> (ARM, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10af348]"></a>GetKey</STRONG> (ARM, 56 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyValue
<LI><a href="#[10aecd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTst
</UL>

<P><STRONG><a name="[10af300]"></a>DoKey</STRONG> (ARM, 88 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
<LI><a href="#[10aecd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTst
</UL>

<P><STRONG><a name="[10af2b8]"></a>PutKey</STRONG> (ARM, 792 bytes, Stack size 20 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PutKey
</UL>
<BR>[Called By]<UL><LI><a href="#[10af228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0ISR
</UL>

<P><STRONG><a name="[10af270]"></a>Key_Ini</STRONG> (ARM, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10af228]"></a>Timer0ISR</STRONG> (ARM, 460 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Timer0ISR &rArr; PutKey
</UL>
<BR>[Calls]<UL><LI><a href="#[10af2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[10af1e0]"></a>RTC_ISR</STRONG> (ARM, 128 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[10af198]"></a>IRQ_UART1</STRONG> (ARM, 660 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IRQ_UART1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[10af150]"></a>IRQ_UART0</STRONG> (ARM, 488 bytes, Stack size 12 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10af108]"></a>Init_Uart0</STRONG> (ARM, 128 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10aebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadStarData
</UL>

<P><STRONG><a name="[10af0c0]"></a>UART0_GetByte</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10af078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetStr
</UL>

<P><STRONG><a name="[10af078]"></a>UART0_GetStr</STRONG> (ARM, 44 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10af0c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10aebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadStarData
</UL>

<P><STRONG><a name="[10af030]"></a>UART0_SentByte</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10aefa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SUART0_SentStr
<LI><a href="#[10aefe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SentByteArray
</UL>

<P><STRONG><a name="[10aefe8]"></a>UART0_SentByteArray</STRONG> (ARM, 48 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART0_SentByteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[10af030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10aba30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendToSkymap
<LI><a href="#[10aebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadStarData
</UL>

<P><STRONG><a name="[10aefa0]"></a>SUART0_SentStr</STRONG> (ARM, 76 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10af030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SentByte
</UL>

<P><STRONG><a name="[10aef58]"></a>Init_Uart1</STRONG> (ARM, 128 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10aef10]"></a>UART1_GetByte</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10aeec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GetStr
</UL>

<P><STRONG><a name="[10aeec8]"></a>UART1_GetStr</STRONG> (ARM, 44 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10aef10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GetByte
</UL>

<P><STRONG><a name="[10aee80]"></a>UART1_SentByte</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopeAltPos
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10ac6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandStopTelescope
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10aee38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Sent_Str
</UL>

<P><STRONG><a name="[10aee38]"></a>UART1_Sent_Str</STRONG> (ARM, 76 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>

<P><STRONG><a name="[10aedf0]"></a>delay</STRONG> (ARM, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopeAltPos
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadStarData
<LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
</UL>

<P><STRONG><a name="[10aeda8]"></a>TimerInit</STRONG> (ARM, 328 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
</UL>

<P><STRONG><a name="[10aed60]"></a>PowerOnInit</STRONG> (ARM, 268 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = PowerOnInit &rArr; LCDInit &rArr; LCDRfrsh
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInit
<LI><a href="#[10af270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Ini
<LI><a href="#[10af588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_Init
<LI><a href="#[10af618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDContrast
<LI><a href="#[10af6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBacklight
<LI><a href="#[10af6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[10af738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRfrsh
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10aed18]"></a>LCDtst</STRONG> (ARM, 156 bytes, Stack size 12 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>

<P><STRONG><a name="[10aecd0]"></a>KeyTst</STRONG> (ARM, 104 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10af300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoKey
<LI><a href="#[10af348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
</UL>

<P><STRONG><a name="[10aec88]"></a>RTCTst</STRONG> (ARM, 480 bytes, Stack size 40 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
</UL>

<P><STRONG><a name="[10aec40]"></a>ReadFromRom</STRONG> (ARM, 152 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10af540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonPlanetInfo
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
<LI><a href="#[10ae1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLatestRecentStarInfoNum
<LI><a href="#[10ae220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLatestRecentStarInfoNum
<LI><a href="#[10ae268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfoNum
<LI><a href="#[10ae2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecentStarInfoNum
<LI><a href="#[10ae2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerLandMarkInfo
<LI><a href="#[10ae388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfo
<LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
<LI><a href="#[10ae460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerLandMarkInfoNum
<LI><a href="#[10ae4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfo
<LI><a href="#[10ae580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfoNum
<LI><a href="#[10ae5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTrackingErrorInfoNum
<LI><a href="#[10ae610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerCityInfo
<LI><a href="#[10ae6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfo
<LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
<LI><a href="#[10ae778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerCityInfoNum
<LI><a href="#[10ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchCustomerStarInfo
<LI><a href="#[10ae808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeCustomerStarInfo
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfo
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
<LI><a href="#[10aea48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCityInfo
<LI><a href="#[10aea90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStarInfo
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
<LI><a href="#[10aeb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessierStarInfo
<LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>

<P><STRONG><a name="[10aebf8]"></a>WriteToRom</STRONG> (ARM, 184 bytes, Stack size 20 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aedf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[10af540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLatestRecentStarInfoNum
<LI><a href="#[10ae2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecentStarInfoNum
<LI><a href="#[10ae2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerLandMarkInfo
<LI><a href="#[10ae460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerLandMarkInfoNum
<LI><a href="#[10ae5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTrackingErrorInfoNum
<LI><a href="#[10ae610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerCityInfo
<LI><a href="#[10ae778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerCityInfoNum
<LI><a href="#[10ae808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeCustomerStarInfo
<LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
<LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
<LI><a href="#[10aebb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadStarData
</UL>

<P><STRONG><a name="[10aebb0]"></a>LoadStarData</STRONG> (ARM, 316 bytes, Stack size 548 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aedf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[10aefe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SentByteArray
<LI><a href="#[10af078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetStr
<LI><a href="#[10af108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart0
</UL>

<P><STRONG><a name="[10aeb68]"></a>Edit</STRONG> (ARM, 156 bytes, Stack size 560 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditRecentStarInfo
<LI><a href="#[10ae3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerLandMarkInfo
<LI><a href="#[10ae538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditTrackingErrorInfo
<LI><a href="#[10ae6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerCityInfo
<LI><a href="#[10ae970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerStarInfo
</UL>

<P><STRONG><a name="[10aeb20]"></a>GetMessierStarInfo</STRONG> (ARM, 228 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetMessierStarInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10adec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMObject
<LI><a href="#[10adf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopularNameObject
</UL>

<P><STRONG><a name="[10aead8]"></a>Get88ConstellationInfo</STRONG> (ARM, 304 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Get88ConstellationInfo &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a33f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10a34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10adcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConstellationObject
</UL>

<P><STRONG><a name="[10aea90]"></a>GetStarInfo</STRONG> (ARM, 1612 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetStarInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ade78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNgcIcObject
</UL>

<P><STRONG><a name="[10aea48]"></a>GetCityInfo</STRONG> (ARM, 364 bytes, Stack size 88 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetCityInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10aea00]"></a>SetCustomerStarInfoNum</STRONG> (ARM, 108 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetCustomerStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllCustomerStarInfo
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerStarInfo
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
</UL>

<P><STRONG><a name="[10ae9b8]"></a>GetCustomerStarInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetCustomerStarInfoNum &rArr; SetCustomerStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchCustomerStarInfo
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerStarInfo
<LI><a href="#[10ae928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfo
</UL>

<P><STRONG><a name="[10ae970]"></a>EditCustomerStarInfo</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EditCustomerStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeCustomerStarInfo
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerStarInfo
</UL>

<P><STRONG><a name="[10ae928]"></a>GetCustomerStarInfo</STRONG> (ARM, 288 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GetCustomerStarInfo &rArr; GetCustomerStarInfoNum &rArr; SetCustomerStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ae8e0]"></a>AddCustomerStarInfo</STRONG> (ARM, 236 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = AddCustomerStarInfo &rArr; EditCustomerStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerStarInfo
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
</UL>

<P><STRONG><a name="[10ae898]"></a>DeleteCustomerStarInfo</STRONG> (ARM, 192 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = DeleteCustomerStarInfo &rArr; EditCustomerStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerStarInfo
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ae850]"></a>DeleteAllCustomerStarInfo</STRONG> (ARM, 20 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10aea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerStarInfoNum
</UL>

<P><STRONG><a name="[10ae808]"></a>ExchangeCustomerStarInfo</STRONG> (ARM, 504 bytes, Stack size 584 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerStarInfo
<LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>

<P><STRONG><a name="[10ae7c0]"></a>SearchCustomerStarInfo</STRONG> (ARM, 372 bytes, Stack size 64 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>

<P><STRONG><a name="[10ae778]"></a>SetCustomerCityInfoNum</STRONG> (ARM, 120 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetCustomerCityInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerCityInfo
<LI><a href="#[10ae658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerCityInfo
<LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
</UL>

<P><STRONG><a name="[10ae730]"></a>GetCustomerCityInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetCustomerCityInfoNum &rArr; SetCustomerCityInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerCityInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ae610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerCityInfo
<LI><a href="#[10ae658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerCityInfo
<LI><a href="#[10ae6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfo
</UL>

<P><STRONG><a name="[10ae6e8]"></a>EditCustomerCityInfo</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EditCustomerCityInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerCityInfo
</UL>

<P><STRONG><a name="[10ae6a0]"></a>GetCustomerCityInfo</STRONG> (ARM, 328 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GetCustomerCityInfo &rArr; GetCustomerCityInfoNum &rArr; SetCustomerCityInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ae658]"></a>AddCustomerCityInfo</STRONG> (ARM, 292 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = AddCustomerCityInfo &rArr; EditCustomerCityInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerCityInfo
<LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
<LI><a href="#[10ae778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerCityInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10acbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputSite
</UL>

<P><STRONG><a name="[10ae610]"></a>DeleteCustomerCityInfo</STRONG> (ARM, 208 bytes, Stack size 544 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = DeleteCustomerCityInfo &rArr; GetCustomerCityInfoNum &rArr; SetCustomerCityInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
<LI><a href="#[10ae778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerCityInfoNum
<LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ae5c8]"></a>SetTrackingErrorInfoNum</STRONG> (ARM, 108 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetTrackingErrorInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTrackingErrorInfo
<LI><a href="#[10ae580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfoNum
</UL>

<P><STRONG><a name="[10ae580]"></a>GetTrackingErrorInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetTrackingErrorInfoNum &rArr; SetTrackingErrorInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTrackingErrorInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ae4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTrackingErrorInfo
<LI><a href="#[10ae4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfo
</UL>

<P><STRONG><a name="[10ae538]"></a>EditTrackingErrorInfo</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EditTrackingErrorInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTrackingErrorInfo
</UL>

<P><STRONG><a name="[10ae4f0]"></a>GetTrackingErrorInfo</STRONG> (ARM, 368 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GetTrackingErrorInfo &rArr; GetTrackingErrorInfoNum &rArr; SetTrackingErrorInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ae4a8]"></a>AddTrackingErrorInfo</STRONG> (ARM, 332 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = AddTrackingErrorInfo &rArr; EditTrackingErrorInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditTrackingErrorInfo
<LI><a href="#[10ae580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfoNum
<LI><a href="#[10ae5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTrackingErrorInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ae460]"></a>SetCustomerLandMarkInfoNum</STRONG> (ARM, 120 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetCustomerLandMarkInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerLandMarkInfo
<LI><a href="#[10ae340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerLandMarkInfo
<LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
</UL>

<P><STRONG><a name="[10ae418]"></a>GetCustomerLandMarkInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetCustomerLandMarkInfoNum &rArr; SetCustomerLandMarkInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerLandMarkInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ae2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerLandMarkInfo
<LI><a href="#[10ae340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerLandMarkInfo
<LI><a href="#[10ae388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfo
</UL>

<P><STRONG><a name="[10ae3d0]"></a>EditCustomerLandMarkInfo</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EditCustomerLandMarkInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerLandMarkInfo
</UL>

<P><STRONG><a name="[10ae388]"></a>GetCustomerLandMarkInfo</STRONG> (ARM, 260 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = GetCustomerLandMarkInfo &rArr; GetCustomerLandMarkInfoNum &rArr; SetCustomerLandMarkInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ae340]"></a>AddCustomerLandMarkInfo</STRONG> (ARM, 240 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = AddCustomerLandMarkInfo &rArr; EditCustomerLandMarkInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditCustomerLandMarkInfo
<LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
<LI><a href="#[10ae460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerLandMarkInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark
</UL>

<P><STRONG><a name="[10ae2f8]"></a>DeleteCustomerLandMarkInfo</STRONG> (ARM, 204 bytes, Stack size 544 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = DeleteCustomerLandMarkInfo &rArr; GetCustomerLandMarkInfoNum &rArr; SetCustomerLandMarkInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
<LI><a href="#[10ae460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCustomerLandMarkInfoNum
<LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ae2b0]"></a>SetRecentStarInfoNum</STRONG> (ARM, 108 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
<LI><a href="#[10ae268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfoNum
</UL>

<P><STRONG><a name="[10ae268]"></a>GetRecentStarInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetRecentStarInfoNum &rArr; SetRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecentStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyMenu
<LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
</UL>

<P><STRONG><a name="[10ae220]"></a>SetLatestRecentStarInfoNum</STRONG> (ARM, 108 bytes, Stack size 536 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SetLatestRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aebf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToRom
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
<LI><a href="#[10ae1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLatestRecentStarInfoNum
</UL>

<P><STRONG><a name="[10ae1d8]"></a>GetLatestRecentStarInfoNum</STRONG> (ARM, 72 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GetLatestRecentStarInfoNum &rArr; SetLatestRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLatestRecentStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
</UL>

<P><STRONG><a name="[10ae190]"></a>EditRecentStarInfo</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EditRecentStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
</UL>

<P><STRONG><a name="[10ae148]"></a>GetRecentStarInfo</STRONG> (ARM, 280 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = GetRecentStarInfo &rArr; GetLatestRecentStarInfoNum &rArr; SetLatestRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10ae1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLatestRecentStarInfoNum
<LI><a href="#[10ae268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfoNum
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyMenu
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ae100]"></a>AddRecentStarInfo</STRONG> (ARM, 256 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = AddRecentStarInfo &rArr; EditRecentStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EditRecentStarInfo
<LI><a href="#[10ae1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLatestRecentStarInfoNum
<LI><a href="#[10ae220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLatestRecentStarInfoNum
<LI><a href="#[10ae268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfoNum
<LI><a href="#[10ae2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRecentStarInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ae0b8]"></a>GetSunMoonPlanetInfo</STRONG> (ARM, 220 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = GetSunMoonPlanetInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[10aec40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFromRom
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
</UL>

<P><STRONG><a name="[10ae070]"></a>GetMenuInfo</STRONG> (ARM, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10ae028]"></a>GetHelp</STRONG> (ARM, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10adfe0]"></a>FindAlignStar</STRONG> (ARM, 1592 bytes, Stack size 576 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = FindAlignStar &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[10a2998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10a4350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[10a44b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
</UL>

<P><STRONG><a name="[10adf98]"></a>InitSysPara</STRONG> (ARM, 1276 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FInitPara
</UL>

<P><STRONG><a name="[10adf50]"></a>GetSysTime</STRONG> (ARM, 612 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10adf08]"></a>GetPopularNameObject</STRONG> (ARM, 40 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GetPopularNameObject &rArr; GetMessierStarInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessierStarInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adec0]"></a>GetMObject</STRONG> (ARM, 40 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GetMObject &rArr; GetMessierStarInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aeb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessierStarInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ade78]"></a>GetNgcIcObject</STRONG> (ARM, 92 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GetNgcIcObject &rArr; GetStarInfo &rArr; ReadFromRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10aea90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStarInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ade30]"></a>GetUgcObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adde8]"></a>GetMcgObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adda0]"></a>GetCaldwellObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10add58]"></a>GetAbellObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10add10]"></a>GetHershelObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adcc8]"></a>GetConstellationObject</STRONG> (ARM, 48 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GetConstellationObject &rArr; Get88ConstellationInfo &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adc80]"></a>GetFixedStarObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adc38]"></a>GetDoubleStarObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adbf0]"></a>GetVariableStarObject</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adba8]"></a>FFindTelType</STRONG> (ARM, 100 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10adb60]"></a>MenuDelay</STRONG> (ARM, 56 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
</UL>

<P><STRONG><a name="[10adb18]"></a>FDriveTelescope</STRONG> (ARM, 1596 bytes, Stack size 64 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FDriveTelescope &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10adb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuDelay
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
</UL>

<P><STRONG><a name="[10adad0]"></a>FHandPowerTelescope</STRONG> (ARM, 52 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
</UL>

<P><STRONG><a name="[10ada88]"></a>FStartGoto</STRONG> (ARM, 100 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FStartGoto &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ad410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarAlign
<LI><a href="#[10ad458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAlign
<LI><a href="#[10ad4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FOneStarAlign
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
</UL>

<P><STRONG><a name="[10ada40]"></a>FPointStarAlgorithm</STRONG> (ARM, 840 bytes, Stack size 88 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FPointStarAlgorithm &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
</UL>

<P><STRONG><a name="[10ad9f8]"></a>FBeep</STRONG> (ARM, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
</UL>

<P><STRONG><a name="[10ad9b0]"></a>GetLocalTime</STRONG> (ARM, 104 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
</UL>

<P><STRONG><a name="[10ad968]"></a>FCalSiderealTime</STRONG> (ARM, 8892 bytes, Stack size 736 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10ad9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLocalTime
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
</UL>

<P><STRONG><a name="[10ad920]"></a>GotoEQ</STRONG> (ARM, 4972 bytes, Stack size 168 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = GotoEQ &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ad9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FBeep
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ad8d8]"></a>FAirRefraction</STRONG> (ARM, 356 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = FAirRefraction &rArr; tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
</UL>

<P><STRONG><a name="[10ad890]"></a>FAlignStarAEPos</STRONG> (ARM, 812 bytes, Stack size 232 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = FAlignStarAEPos &rArr; tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
</UL>

<P><STRONG><a name="[10ad848]"></a>FCalStarAEPos</STRONG> (ARM, 1488 bytes, Stack size 208 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072 + Unknown Stack Size
<LI>Call Chain = FCalStarAEPos &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
</UL>

<P><STRONG><a name="[10ad800]"></a>GotoAZ</STRONG> (ARM, 5504 bytes, Stack size 280 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = GotoAZ &rArr; FCalStarAEPos &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
<LI><a href="#[10ad9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FBeep
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ad7b8]"></a>FAlignStarRAPos</STRONG> (ARM, 884 bytes, Stack size 240 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[10ad770]"></a>FReadTelescopePos</STRONG> (ARM, 76 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[10ad728]"></a>FStopGoto</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10ac0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyBack
<LI><a href="#[10ac138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyUp
<LI><a href="#[10ac180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyDown
<LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftUp
<LI><a href="#[10acde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftDown
<LI><a href="#[10ace28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightDown
<LI><a href="#[10ace70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightUp
</UL>

<P><STRONG><a name="[10ad6e0]"></a>FPointNewStar</STRONG> (ARM, 124 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FPointNewStar &rArr; FStartGoto &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyMenu
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
</UL>

<P><STRONG><a name="[10ad698]"></a>FSetLocation</STRONG> (ARM, 44 bytes, Stack size 16 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10ad650]"></a>FThreeStarCal</STRONG> (ARM, 5532 bytes, Stack size 632 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = FThreeStarCal &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
</UL>

<P><STRONG><a name="[10ad608]"></a>FTowStarCal</STRONG> (ARM, 1624 bytes, Stack size 320 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = FTowStarCal &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
</UL>

<P><STRONG><a name="[10ad5c0]"></a>FOneStarCal</STRONG> (ARM, 108 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FOneStarCal
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
</UL>

<P><STRONG><a name="[10ad578]"></a>FAutoAlign</STRONG> (ARM, 840 bytes, Stack size 240 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = FAutoAlign &rArr; FThreeStarCal &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10ad5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FOneStarCal
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FBeep
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ad530]"></a>FPointAlignStarOk</STRONG> (ARM, 1820 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FPointAlignStarOk &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ad4e8]"></a>FTwoStarAutoAlign</STRONG> (ARM, 320 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = FTwoStarAutoAlign &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ad4a0]"></a>FOneStarAlign</STRONG> (ARM, 244 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FOneStarAlign &rArr; FStartGoto &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ad458]"></a>FTwoStarAlign</STRONG> (ARM, 244 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FTwoStarAlign &rArr; FStartGoto &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ad410]"></a>FThreeStarAlign</STRONG> (ARM, 244 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FThreeStarAlign &rArr; FStartGoto &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ad3c8]"></a>FStarCal</STRONG> (ARM, 16 bytes, Stack size 16 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[10ad380]"></a>FSetupPointTrackPara</STRONG> (ARM, 1052 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ad338]"></a>FSRiseSettime</STRONG> (ARM, 1108 bytes, Stack size 208 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = FSRiseSettime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ad2f0]"></a>FDriveTelescopeNew</STRONG> (ARM, 1396 bytes, Stack size 120 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>

<P><STRONG><a name="[10ad2a8]"></a>dispPhase</STRONG> (ARM, 264 bytes, Stack size 280 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dispPhase &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
</UL>

<P><STRONG><a name="[10ad260]"></a>isLeapYearP</STRONG> (ARM, 92 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isLeapYearP &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daysInMonth
</UL>

<P><STRONG><a name="[10ad218]"></a>daysInMonth</STRONG> (ARM, 148 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = daysInMonth &rArr; isLeapYearP &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10ad260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLeapYearP
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
</UL>

<P><STRONG><a name="[10ad1d0]"></a>moonPhase</STRONG> (ARM, 364 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = moonPhase &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
</UL>

<P><STRONG><a name="[10ad188]"></a>dispMoonphase</STRONG> (ARM, 408 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = dispMoonphase &rArr; dispPhase &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10ad1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moonPhase
<LI><a href="#[10ad218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daysInMonth
<LI><a href="#[10ad2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPhase
<LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
</UL>

<P><STRONG><a name="[10ad140]"></a>dispPole</STRONG> (ARM, 3872 bytes, Stack size 408 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = dispPole &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10a81b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf (via Veneer)
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
<LI><a href="#[10af780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWC
<LI><a href="#[10af7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWD
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
</UL>

<P><STRONG><a name="[10ad0f8]"></a>FSysMainShow</STRONG> (ARM, 1604 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FSysMainShow &rArr; DispEn &rArr; Disp8x8
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a7868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[10af468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCh
<LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
</UL>

<P><STRONG><a name="[10ad0b0]"></a>GetNowBestObject</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ad068]"></a>GetSunSysObject</STRONG> (ARM, 1368 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a5200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ae0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonPlanetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10ad020]"></a>FSelShowLanguage</STRONG> (ARM, 84 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10acfd8]"></a>FSysMainShowSet</STRONG> (ARM, 4304 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FSysMainShowSet &rArr; __1sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[10a3cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a5200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a81b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10acf90]"></a>FSelMenuLanguage</STRONG> (ARM, 3612 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10acf48]"></a>FMenuShowSet</STRONG> (ARM, 55400 bytes, Stack size 144 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = FMenuShowSet &rArr; GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[10a2998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a3198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10a33f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10a34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10a38c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[10a3cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[10a43e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a5200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a81b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf (via Veneer)
<LI><a href="#[10acf90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSelMenuLanguage
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSelShowLanguage
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowBestObject
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10adba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFindTelType
<LI><a href="#[10adbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVariableStarObject
<LI><a href="#[10adc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDoubleStarObject
<LI><a href="#[10adc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFixedStarObject
<LI><a href="#[10adcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConstellationObject
<LI><a href="#[10add10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHershelObject
<LI><a href="#[10add58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAbellObject
<LI><a href="#[10adda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCaldwellObject
<LI><a href="#[10adde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMcgObject
<LI><a href="#[10ade30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUgcObject
<LI><a href="#[10ade78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNgcIcObject
<LI><a href="#[10adec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMObject
<LI><a href="#[10adf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopularNameObject
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
<LI><a href="#[10ae388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfo
<LI><a href="#[10ae4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfo
<LI><a href="#[10ae6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfo
<LI><a href="#[10ae928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfo
<LI><a href="#[10aea48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCityInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
</UL>

<P><STRONG><a name="[10acf00]"></a>FMenuShow</STRONG> (ARM, 13156 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = FMenuShow &rArr; dispPole &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10ad0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShow
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
<LI><a href="#[10af3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCn
<LI><a href="#[10af468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCh
<LI><a href="#[10af4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEn
<LI><a href="#[10af738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRfrsh
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10aceb8]"></a>FHandControlTelescopeTwo</STRONG> (ARM, 2260 bytes, Stack size 36 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FHandControlTelescopeTwo &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10acd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftUp
<LI><a href="#[10acde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftDown
<LI><a href="#[10ace28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightDown
<LI><a href="#[10ace70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightUp
</UL>

<P><STRONG><a name="[10ace70]"></a>FKeyRightUp</STRONG> (ARM, 236 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FKeyRightUp &rArr; FHandControlTelescopeTwo &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ace28]"></a>FKeyRightDown</STRONG> (ARM, 312 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FKeyRightDown &rArr; FHandControlTelescopeTwo &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10acde0]"></a>FKeyLeftDown</STRONG> (ARM, 236 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FKeyLeftDown &rArr; FHandControlTelescopeTwo &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10acd98]"></a>FKeyLeftUp</STRONG> (ARM, 236 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FKeyLeftUp &rArr; FHandControlTelescopeTwo &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aceb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescopeTwo
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10acd50]"></a>FverifyInputStar</STRONG> (ARM, 960 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = FverifyInputStar &rArr; AddCustomerStarInfo &rArr; EditCustomerStarInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a33f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10ae8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerStarInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acd08]"></a>FverifyInputLandmark</STRONG> (ARM, 540 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = FverifyInputLandmark &rArr; AddCustomerLandMarkInfo &rArr; EditCustomerLandMarkInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a33f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10a3ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[10a44b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10ae340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerLandMarkInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10accc0]"></a>FVerifyAlarmInput</STRONG> (ARM, 148 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FVerifyAlarmInput &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acc78]"></a>GetTime</STRONG> (ARM, 48 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acc30]"></a>FRaDecInputShow</STRONG> (ARM, 1812 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FRaDecInputShow &rArr; __1sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a81b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acbe8]"></a>FverifyInputSite</STRONG> (ARM, 360 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = FverifyInputSite &rArr; AddCustomerCityInfo &rArr; EditCustomerCityInfo &rArr; Edit &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10ae658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCustomerCityInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acba0]"></a>FSetSysTime</STRONG> (ARM, 400 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FSetSysTime &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acb58]"></a>SetSkyPhObject</STRONG> (ARM, 1428 bytes, Stack size 232 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = SetSkyPhObject &rArr; GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10acb10]"></a>AdjustPlanetRise</STRONG> (ARM, 976 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AdjustPlanetRise &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[10a2998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
</UL>

<P><STRONG><a name="[10acac8]"></a>SetNowBestObject</STRONG> (ARM, 2320 bytes, Stack size 264 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = SetNowBestObject &rArr; GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a7b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10aca80]"></a>FVerifyRaDecInput</STRONG> (ARM, 1664 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = FVerifyRaDecInput &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10a1d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10aca38]"></a>FHandControlTelescope</STRONG> (ARM, 1168 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FHandControlTelescope &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyUp
<LI><a href="#[10ac180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyDown
<LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
</UL>

<P><STRONG><a name="[10ac9f0]"></a>FKeyEnter</STRONG> (ARM, 12824 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = FKeyEnter &rArr; SetNowBestObject &rArr; GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a1d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10a81b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf (via Veneer)
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10acba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSetSysTime
<LI><a href="#[10acbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputSite
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acc78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTime
<LI><a href="#[10accc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyAlarmInput
<LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowBestObject
<LI><a href="#[10ad410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarAlign
<LI><a href="#[10ad458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAlign
<LI><a href="#[10ad4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FOneStarAlign
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ad9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FBeep
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
<LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
<LI><a href="#[10adbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVariableStarObject
<LI><a href="#[10adc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDoubleStarObject
<LI><a href="#[10adc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFixedStarObject
<LI><a href="#[10adcc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConstellationObject
<LI><a href="#[10add10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHershelObject
<LI><a href="#[10adda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCaldwellObject
<LI><a href="#[10adde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMcgObject
<LI><a href="#[10ade30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUgcObject
<LI><a href="#[10ade78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNgcIcObject
<LI><a href="#[10adec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMObject
<LI><a href="#[10adf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPopularNameObject
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
<LI><a href="#[10ae2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerLandMarkInfo
<LI><a href="#[10ae388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfo
<LI><a href="#[10ae418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfoNum
<LI><a href="#[10ae580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfoNum
<LI><a href="#[10ae610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerCityInfo
<LI><a href="#[10ae730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfoNum
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfo
<LI><a href="#[10ae9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfoNum
<LI><a href="#[10aedf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac9a8]"></a>FStarInputRight</STRONG> (ARM, 580 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac960]"></a>FLandmarkInputRight</STRONG> (ARM, 564 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac918]"></a>FMfocusInputMoveRight</STRONG> (ARM, 140 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac8d0]"></a>FSfocusInputMoveRight</STRONG> (ARM, 84 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac888]"></a>FAlarmInputMoveRight</STRONG> (ARM, 440 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac840]"></a>FTimerInputMoveRight</STRONG> (ARM, 160 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac7f8]"></a>FWeatherInputRight</STRONG> (ARM, 232 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac7b0]"></a>FSiteInputRight</STRONG> (ARM, 788 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac768]"></a>FDateTimeInputMoveRight</STRONG> (ARM, 484 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac720]"></a>FRaTrackSpeedInputMoveRight</STRONG> (ARM, 236 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac6d8]"></a>FHandStopTelescope</STRONG> (ARM, 92 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FHandStopTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyValue
<LI><a href="#[10ac0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyBack
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac690]"></a>FDecInputMoveRight</STRONG> (ARM, 244 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac648]"></a>FRaInputMoveRight</STRONG> (ARM, 220 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac600]"></a>FFindObjectAccDec</STRONG> (ARM, 140 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
</UL>

<P><STRONG><a name="[10ac5b8]"></a>FKeyRight</STRONG> (ARM, 1116 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FKeyRight &rArr; FHandControlTelescope &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFindObjectAccDec
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandStopTelescope
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInputRight
<LI><a href="#[10ac7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInputRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
<LI><a href="#[10ac960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLandmarkInputRight
<LI><a href="#[10ac9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStarInputRight
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac570]"></a>FStarInputLeft</STRONG> (ARM, 580 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac528]"></a>FLandmarkInputLeft</STRONG> (ARM, 564 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac4e0]"></a>FMfocusInputMoveLeft</STRONG> (ARM, 140 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac498]"></a>FSfocusInputMoveLeft</STRONG> (ARM, 84 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac450]"></a>FAlarmInputMoveLeft</STRONG> (ARM, 192 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac408]"></a>FTimerInputMoveLeft</STRONG> (ARM, 160 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac3c0]"></a>FWeatherInputLeft</STRONG> (ARM, 232 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac378]"></a>FSiteInputLeft</STRONG> (ARM, 788 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac330]"></a>FDateTimeInputMoveLeft</STRONG> (ARM, 484 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac2e8]"></a>FRaTrackSpeedInputMoveLeft</STRONG> (ARM, 236 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac2a0]"></a>FDecInputMoveLeft</STRONG> (ARM, 244 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac258]"></a>FRaInputMoveLeft</STRONG> (ARM, 220 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac210]"></a>FFindObjectAccAdd</STRONG> (ARM, 140 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
</UL>

<P><STRONG><a name="[10ac1c8]"></a>FKeyLeft</STRONG> (ARM, 1196 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FKeyLeft &rArr; FHandControlTelescope &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFindObjectAccAdd
<LI><a href="#[10ac258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveLeft
<LI><a href="#[10ac2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveLeft
<LI><a href="#[10ac2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveLeft
<LI><a href="#[10ac330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveLeft
<LI><a href="#[10ac378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInputLeft
<LI><a href="#[10ac3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInputLeft
<LI><a href="#[10ac408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveLeft
<LI><a href="#[10ac450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveLeft
<LI><a href="#[10ac498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveLeft
<LI><a href="#[10ac4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveLeft
<LI><a href="#[10ac528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLandmarkInputLeft
<LI><a href="#[10ac570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStarInputLeft
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac180]"></a>FKeyDown</STRONG> (ARM, 6720 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = FKeyDown &rArr; FHandControlTelescope &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
<LI><a href="#[10af6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBacklight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac138]"></a>FKeyUp</STRONG> (ARM, 6616 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = FKeyUp &rArr; FHandControlTelescope &rArr; FHandPowerTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
<LI><a href="#[10af6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBacklight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac0f0]"></a>FKeyBack</STRONG> (ARM, 6276 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FKeyBack &rArr; FHandStopTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandStopTelescope
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac0a8]"></a>FKeyMenu</STRONG> (ARM, 260 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = FKeyMenu &rArr; GetRecentStarInfo &rArr; GetLatestRecentStarInfoNum &rArr; SetLatestRecentStarInfoNum &rArr; WriteToRom
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
<LI><a href="#[10ae268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac060]"></a>FKeyWH</STRONG> (ARM, 124 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10ac018]"></a>FKeyXH</STRONG> (ARM, 168 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = FKeyXH &rArr; LCDBacklight
</UL>
<BR>[Calls]<UL><LI><a href="#[10af6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBacklight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abfd0]"></a>F_SelfdefStarInput</STRONG> (ARM, 1324 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = F_SelfdefStarInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStarInputRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
</UL>

<P><STRONG><a name="[10abf88]"></a>F_LandmarkInput</STRONG> (ARM, 1376 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = F_LandmarkInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLandmarkInputRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
</UL>

<P><STRONG><a name="[10abf40]"></a>FWeatherInput</STRONG> (ARM, 544 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FWeatherInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInputRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
</UL>

<P><STRONG><a name="[10abef8]"></a>FSiteInput</STRONG> (ARM, 1712 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInputRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
</UL>

<P><STRONG><a name="[10abeb0]"></a>FKey9</STRONG> (ARM, 1384 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey9 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abe68]"></a>FKey8</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey8 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abe20]"></a>FKey7</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey7 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abdd8]"></a>FKey6</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey6 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abd90]"></a>FKey5</STRONG> (ARM, 1212 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey5 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abd48]"></a>FKey4</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey4 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abd00]"></a>FKey3</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey3 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abcb8]"></a>FKey2</STRONG> (ARM, 1288 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey2 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abc70]"></a>FKey1</STRONG> (ARM, 1200 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey1 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abc28]"></a>FKey0</STRONG> (ARM, 1216 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FKey0 &rArr; FSiteInput
</UL>
<BR>[Calls]<UL><LI><a href="#[10abef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSiteInput
<LI><a href="#[10abf40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FWeatherInput
<LI><a href="#[10abf88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_LandmarkInput
<LI><a href="#[10abfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_SelfdefStarInput
<LI><a href="#[10ac648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaInputMoveRight
<LI><a href="#[10ac690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDecInputMoveRight
<LI><a href="#[10ac720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaTrackSpeedInputMoveRight
<LI><a href="#[10ac768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDateTimeInputMoveRight
<LI><a href="#[10ac840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTimerInputMoveRight
<LI><a href="#[10ac888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlarmInputMoveRight
<LI><a href="#[10ac8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSfocusInputMoveRight
<LI><a href="#[10ac918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMfocusInputMoveRight
<LI><a href="#[10ad728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStopGoto
<LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abbe0]"></a>GetKeyValue</STRONG> (ARM, 460 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetKeyValue &rArr; FHandStopTelescope
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandStopTelescope
<LI><a href="#[10af348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
</UL>

<P><STRONG><a name="[10abb98]"></a>DoMenu</STRONG> (ARM, 1080 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = DoMenu &rArr; FKeyEnter &rArr; SetNowBestObject &rArr; GetSunSysObject &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10abbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyValue
<LI><a href="#[10abc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey0
<LI><a href="#[10abc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey1
<LI><a href="#[10abcb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey2
<LI><a href="#[10abd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey3
<LI><a href="#[10abd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey4
<LI><a href="#[10abd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey5
<LI><a href="#[10abdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey6
<LI><a href="#[10abe20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey7
<LI><a href="#[10abe68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey8
<LI><a href="#[10abeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKey9
<LI><a href="#[10ac018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyXH
<LI><a href="#[10ac060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyWH
<LI><a href="#[10ac0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyMenu
<LI><a href="#[10ac0f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyBack
<LI><a href="#[10ac138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyUp
<LI><a href="#[10ac180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyDown
<LI><a href="#[10ac1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeft
<LI><a href="#[10ac5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRight
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftUp
<LI><a href="#[10acde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyLeftDown
<LI><a href="#[10ace28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightDown
<LI><a href="#[10ace70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyRightUp
<LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow
<LI><a href="#[10adb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuDelay
<LI><a href="#[10adf50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime
<LI><a href="#[10af300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoKey
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10abb50]"></a>FInitPara</STRONG> (ARM, 180 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FInitPara
</UL>
<BR>[Calls]<UL><LI><a href="#[10adf98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSysPara
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10abb08]"></a>FGetTelescopePos</STRONG> (ARM, 1028 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FGetTelescopePos &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10adb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuDelay
<LI><a href="#[10aedf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10abac0]"></a>FGetTelescopeAltPos</STRONG> (ARM, 292 bytes, Stack size 24 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10aedf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
</UL>

<P><STRONG><a name="[10aba78]"></a>ASCOM</STRONG> (ARM, 276 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10aba30]"></a>SendToSkymap</STRONG> (ARM, 112 bytes, Stack size 20 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendToSkymap &rArr; UART0_SentByteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[10aefe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SentByteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10ab9e8]"></a>main</STRONG> (ARM, 7332 bytes, Stack size 72 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424 + Unknown Stack Size
<LI>Call Chain = main &rArr; GotoAZ &rArr; FCalStarAEPos &rArr; FCalSiderealTime &rArr; sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10a34d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[10a3cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[10a43e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[10a4978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10aba30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendToSkymap
<LI><a href="#[10aba78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCOM
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10abb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FInitPara
<LI><a href="#[10abb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMenu
<LI><a href="#[10ac6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandStopTelescope
<LI><a href="#[10aca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandControlTelescope
<LI><a href="#[10ad380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSetupPointTrackPara
<LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FBeep
<LI><a href="#[10ada88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FStartGoto
<LI><a href="#[10adad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FHandPowerTelescope
<LI><a href="#[10adb60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuDelay
<LI><a href="#[10ae100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRecentStarInfo
<LI><a href="#[10ae4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTrackingErrorInfo
<LI><a href="#[10aed60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnInit
<LI><a href="#[10aee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SentByte
<LI><a href="#[10aef58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart1
<LI><a href="#[10af108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(.text)
</UL>
<P><STRONG><a name="[10a8ed8]"></a>__printf</STRONG> (Thumb, 748 bytes, Stack size 48 bytes, __printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a2538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
<LI><a href="#[10a8518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[10a8738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10a8ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb (Weak Reference)
<LI><a href="#[10a8b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[10a8b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[10a8bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct (Weak Reference)
<LI><a href="#[10a8c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex (Weak Reference)
<LI><a href="#[10a8c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (Weak Reference)
<LI><a href="#[10a8c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
<LI><a href="#[10a8ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (Weak Reference)
<LI><a href="#[10ce4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[10ce5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[10d0890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[10a8e90]"></a>_printf_return_value</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[10a8e48]"></a>_printf_percent</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[10a8e00]"></a>_printf_sizespec</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[10a8968]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, _printf_pad.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[10d0f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[10a8920]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[10d0f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[10a8738]"></a>_printf_str</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, _printf_str.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a8920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10a8968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10ce4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10a8518]"></a>_printf_int_dec</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, _printf_dec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a83f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[10a8440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
<LI><a href="#[10cfe38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via Veneer)
<LI><a href="#[10d0f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10a8200]"></a>__0sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __0sprintf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d0648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10d0890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[10a81b8]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, __0sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __1sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter (via Veneer)
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow (via Veneer)
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet (via Veneer)
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet (via Veneer)
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole (via Veneer)
</UL>

<P><STRONG><a name="[10a7fb0]"></a>atoi</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10d00b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter (via Veneer)
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput (via Veneer)
<LI><a href="#[10acba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSetSysTime (via Veneer)
<LI><a href="#[10acbe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputSite (via Veneer)
<LI><a href="#[10accc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyAlarmInput (via Veneer)
<LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark (via Veneer)
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar (via Veneer)
</UL>

<P><STRONG><a name="[10a7da8]"></a>_scanf_longlong</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, _scanf_longlong.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10ce5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[10d0528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[10d12b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul (via Veneer)
</UL>

<P><STRONG><a name="[10a7b28]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
<LI><a href="#[10ad2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPhase
<LI><a href="#[10ad578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAutoAlign
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>

<P><STRONG><a name="[10a7ae0]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10a7a98]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10a7a50]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10a7868]"></a>strlen</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShow (via Veneer)
<LI><a href="#[10ad0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShow (via Veneer)
</UL>

<P><STRONG><a name="[10a7548]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[10a7500]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10ad188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispMoonphase
<LI><a href="#[10ad1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moonPhase
<LI><a href="#[10ad260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLeapYearP
<LI><a href="#[10ae148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecentStarInfo
<LI><a href="#[10ae388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerLandMarkInfo
<LI><a href="#[10ae4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackingErrorInfo
<LI><a href="#[10ae6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerCityInfo
<LI><a href="#[10ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchCustomerStarInfo
<LI><a href="#[10ae808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeCustomerStarInfo
<LI><a href="#[10ae898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCustomerStarInfo
<LI><a href="#[10ae928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCustomerStarInfo
<LI><a href="#[10aea48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCityInfo
<LI><a href="#[10aea90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStarInfo
<LI><a href="#[10aeb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessierStarInfo
<LI><a href="#[10aeb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Edit
<LI><a href="#[10aecd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTst
<LI><a href="#[10cc308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via Veneer)
</UL>

<P><STRONG><a name="[10a6808]"></a>__use_two_region_memory</STRONG> (ARM, 4 bytes, Stack size 0 bytes, stkheap2.o(.text), UNUSED)

<P><STRONG><a name="[10a67c0]"></a>__rt_stackheap_init</STRONG> (ARM, 36 bytes, Stack size 16 bytes, stkheap2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_stackheap_init &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[10d1420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_storage
<LI><a href="#[10d1ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[10a6778]"></a>__rt_heap_extend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, stkheap2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a66a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[10a1000]"></a>__rt_entry</STRONG> (ARM, 76 bytes, Stack size 16 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = __rt_entry &rArr; __rt_lib_init &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10a67c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[10c9978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_lib_init
<LI><a href="#[10c9ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[10ca8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a6538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[10c2f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[10a0fb8]"></a>__rt_exit</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[10ca3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ca8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[10a0f70]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cd278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[10d1ff8]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c83328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[10ccfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[10a67c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[10d1820]"></a>__aeabi_errno_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via Veneer)
<LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
<LI><a href="#[10cae48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul (via Veneer)
<LI><a href="#[10d00b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via Veneer)
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[10d10f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via Veneer)
</UL>

<P><STRONG><a name="[10d17d8]"></a>__rt_errno_addr_intlibspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[10d1420]"></a>__rt_stackheap_storage</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_stackheap_storage_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a67c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL>

<P><STRONG><a name="[10d12b0]"></a>__aeabi_lmul</STRONG> (ARM, 0 bytes, Stack size 4 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[10a7da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (via Veneer)
<LI><a href="#[10c57b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_ll_mullu
</UL>

<P><STRONG><a name="[10d1268]"></a>_ll_mul</STRONG> (ARM, 28 bytes, Stack size 4 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[10d10f0]"></a>__read_errno</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __read_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof (via Veneer)
</UL>

<P><STRONG><a name="[10d10a8]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan (via Veneer)
<LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin (via Veneer)
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos (via Veneer)
<LI><a href="#[10a1d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof (via Veneer)
<LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos (via Veneer)
<LI><a href="#[10c3aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp (via Veneer)
<LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat (via Veneer)
<LI><a href="#[10cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
</UL>

<P><STRONG><a name="[10d0f20]"></a>_printf_int_common</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, _printf_intcommon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a8920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10a8968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[10d0d10]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[10d0cc8]"></a>_printf_fp_dec_real</STRONG> (Thumb, 696 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a8920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10a8968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10c8cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_classify (via Veneer)
<LI><a href="#[10cc858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
<LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[10cfe38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via Veneer)
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
</UL>

<P><STRONG><a name="[10d0890]"></a>_printf_char_common</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[10d0648]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a8200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __0sprintf.o(.text)
</UL>
<P><STRONG><a name="[10d0528]"></a>_chval</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
<LI><a href="#[10c4fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
<LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[10cae48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[10d03c0]"></a>__strtod_int</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10d0408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof (via Veneer)
</UL>

<P><STRONG><a name="[10d00b8]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10cae48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[10ccc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via Veneer)
<LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a7fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[10cfe38]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
<LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>

<P><STRONG><a name="[10ce680]"></a>__ARM_call_via_r0</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce638]"></a>__call_via_r0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce5f0]"></a>__ARM_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
<LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[10c4fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
<LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[10ce5a8]"></a>__call_via_r1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce560]"></a>__ARM_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a8920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10a8968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[10cb2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_outstr_char
<LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[10d0f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[10ce518]"></a>__call_via_r2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce4d0]"></a>__ARM_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10ce488]"></a>__call_via_r3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce440]"></a>__ARM_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce3f8]"></a>__call_via_r4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce3b0]"></a>__ARM_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce368]"></a>__call_via_r5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce320]"></a>__ARM_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce2d8]"></a>__call_via_r6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce290]"></a>__ARM_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10ce248]"></a>__call_via_r7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[10cd278]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a0f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_abort
</UL>

<P><STRONG><a name="[10ccfe8]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[10ccfa0]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d1ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[10ccf58]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[10ccc20]"></a>__rt_ctype_table</STRONG> (ARM, 24 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10cc858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[10cc550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace (via Veneer)
<LI><a href="#[10d00b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via Veneer)
</UL>

<P><STRONG><a name="[10cc858]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
<LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
<LI><a href="#[10ccc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>

<P><STRONG><a name="[10cc6e8]"></a>_ll_udiv10</STRONG> (ARM, 160 bytes, Stack size 12 bytes, lludiv10.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10cc550]"></a>isspace</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10ccc20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[10cc308]"></a>_btod_etento</STRONG> (Thumb, 196 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[10cb960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via Veneer)
<LI><a href="#[10cb9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[10cb2e0]"></a>_printf_outstr_char</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_outstr_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _printf_outstr_char
</UL>
<BR>[Calls]<UL><LI><a href="#[10ce560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[10cb168]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_input_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[10cb048]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[10cb000]"></a>_sbackspace</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[10cae48]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10d0528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d00b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[10ca8a8]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exit &rArr; __rt_exit &rArr; __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[10a0fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[10ca818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[10ca428]"></a>__rt_lib_init</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __rt_lib_init &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10c7578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
<LI><a href="#[10c82c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (via Veneer)
<LI><a href="#[10c9ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[10c9f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init (Weak Reference)
<LI><a href="#[10c9f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[10c9fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[10c9ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[10ca038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[10ca080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[10ca0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[10ca110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[10ca158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap_init (Weak Reference)
<LI><a href="#[10ca1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[10ca1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[10ca278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_ (Weak Reference)
<LI><a href="#[10ca2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
<LI><a href="#[10ca308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[10ca350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_init (Weak Reference)
<LI><a href="#[10ca4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_argv_veneer (via Veneer)
<LI><a href="#[10caad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (via Veneer)
<LI><a href="#[10cc858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry (via Veneer)
</UL>

<P><STRONG><a name="[10ca3e0]"></a>__rt_lib_shutdown</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_lib_shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[10c9e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[10c9e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
<LI><a href="#[10ca230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a0fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
</UL>

<P><STRONG><a name="[10c9ae8]"></a>_platform_post_stackheap_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, boardinit2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[10c9978]"></a>_platform_post_lib_init</STRONG> (ARM, 16 bytes, Stack size 8 bytes, boardinit3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_lib_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10a1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[10c8948]"></a>__I_use_semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[10c8900]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[10c8748]"></a>_scanf_really_real</STRONG> (Thumb, 714 bytes, Stack size 128 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10c5378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow (via Veneer)
<LI><a href="#[10c5d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan (via Veneer)
<LI><a href="#[10c5d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real (via Veneer)
<LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[10cc858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
<LI><a href="#[10ce5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (via Veneer)
</UL>

<P><STRONG><a name="[10c7ce8]"></a>strcmp</STRONG> (ARM, 156 bytes, Stack size 4 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10c82c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[10caad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[10c76e0]"></a>__ARM_get_argv</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, no_argv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_get_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lib_init.o(.emb_text)
</UL>
<P><STRONG><a name="[10c6cc0]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c7578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[10c57b0]"></a>__ARM_ll_mullu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, llmullu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __ARM_ll_mullu &rArr; __aeabi_lmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10d12b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
</UL>

<P><STRONG><a name="[10c5768]"></a>_ll_mullu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llmullu.o(.text), UNUSED)

<P><STRONG><a name="[10c5008]"></a>_scanf_really_hex_real</STRONG> (Thumb, 864 bytes, Stack size 112 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10c3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp (via Veneer)
<LI><a href="#[10c4418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl (via Veneer)
<LI><a href="#[10c5378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow (via Veneer)
<LI><a href="#[10c5600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_itod (via Veneer)
<LI><a href="#[10c8ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via Veneer)
<LI><a href="#[10ce5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[10d0528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real (via Veneer)
</UL>

<P><STRONG><a name="[10c4fc0]"></a>_scanf_really_infnan</STRONG> (Thumb, 430 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[10c4418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl (via Veneer)
<LI><a href="#[10c5600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_itod (via Veneer)
<LI><a href="#[10ce5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[10d0528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan (via Veneer)
</UL>

<P><STRONG><a name="[10c4418]"></a>__aeabi_llsl</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c4fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan (via Veneer)
<LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
</UL>

<P><STRONG><a name="[10c43d0]"></a>_ll_shift_l</STRONG> (ARM, 40 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[10a74b8]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[10a7470]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[10a7590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[10a75d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[10a7620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[10ae0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunMoonPlanetInfo
<LI><a href="#[10aec88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTst
<LI><a href="#[10af660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eyelight
<LI><a href="#[10af6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBacklight
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[10cbba0]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cbb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10cbb58]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10cbb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[10cbb10]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cbb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[10cbba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[10cbac8]"></a>__btod_div_common</STRONG> (ARM, 716 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10cb9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[10cb9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[10cba80]"></a>_e2d</STRONG> (ARM, 96 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10cba38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[10cb918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[10cb9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[10cba38]"></a>_e2e</STRONG> (ARM, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[10cb960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[10cb9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[10cba80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[10cb9f0]"></a>_btod_ediv</STRONG> (ARM, 52 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10cba38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[10cbac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10cc308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via Veneer)
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10cb9a8]"></a>_btod_edivd</STRONG> (ARM, 52 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10cba80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[10cbac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
</UL>

<P><STRONG><a name="[10cb960]"></a>_btod_emul</STRONG> (ARM, 52 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10cb8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[10cba38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[10cc308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via Veneer)
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10cb918]"></a>_btod_emuld</STRONG> (ARM, 52 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10cb8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[10cba80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
</UL>

<P><STRONG><a name="[10cb8d0]"></a>__btod_mult_common</STRONG> (ARM, 616 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10cb918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[10cb960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[10c7368]"></a>__ARM_fpclassify</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10c8cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_classify
</UL>

<P><STRONG><a name="[10cdcb0]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1172 bytes, Stack size 80 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[10c9160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[10ce098]"></a>__kernel_cos</STRONG> (ARM, 372 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[10cdf08]"></a>__kernel_poly</STRONG> (ARM, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10cda40]"></a>__kernel_sin</STRONG> (ARM, 364 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[10cd470]"></a>__kernel_tan</STRONG> (ARM, 976 bytes, Stack size 88 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a4e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10a55a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[10c8cd8]"></a>__mathlib_classify</STRONG> (ARM, 56 bytes, Stack size 8 bytes, classify.o(i.__mathlib_classify), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c7368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>

<P><STRONG><a name="[10c5378]"></a>__mathlib_narrow</STRONG> (ARM, 36 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
<LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
</UL>

<P><STRONG><a name="[10c5330]"></a>__mathlib_tofloat</STRONG> (ARM, 208 bytes, Stack size 24 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_tofloat &rArr; frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10a62d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10c47b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[10c8b20]"></a>__support_dtoi</STRONG> (ARM, 96 bytes, Stack size 16 bytes, dtoi.o(i.__support_dtoi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __support_dtoi
</UL>
<BR>[Calls]<UL><LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10c5600]"></a>__support_itod</STRONG> (ARM, 12 bytes, Stack size 0 bytes, itod.o(i.__support_itod))
<BR><BR>[Called By]<UL><LI><a href="#[10c4fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan (via Veneer)
<LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
<LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
</UL>

<P><STRONG><a name="[10c3ae8]"></a>__support_ldexp</STRONG> (ARM, 32 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10c3aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
</UL>

<P><STRONG><a name="[10a2158]"></a>acos</STRONG> (ARM, 984 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = acos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10a58d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10a5c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10a5d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[10a5de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
</UL>

<P><STRONG><a name="[10a1d38]"></a>atof</STRONG> (ARM, 72 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10d03c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int (via Veneer)
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[10d10f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
</UL>

<P><STRONG><a name="[10a19b8]"></a>cos</STRONG> (ARM, 212 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = cos &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
</UL>

<P><STRONG><a name="[10c47b0]"></a>frexp</STRONG> (ARM, 112 bytes, Stack size 8 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[10c3aa0]"></a>ldexp</STRONG> (ARM, 220 bytes, Stack size 24 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ldexp &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10c3b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_isfinite
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c3ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[10a15e0]"></a>sin</STRONG> (ARM, 228 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = sin &rArr; __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
</UL>

<P><STRONG><a name="[10cd7d0]"></a>sqrt</STRONG> (ARM, 100 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[10a2d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10c9640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[10a12e0]"></a>tan</STRONG> (ARM, 152 bytes, Stack size 32 bytes, tan.o(i.tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10d10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
</UL>

<P><STRONG><a name="[10caad0]"></a>_get_lc_numeric</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10c7ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[10c82c8]"></a>_get_lc_ctype</STRONG> (ARM, 80 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10c7ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[10a62d0]"></a>__aeabi_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acb58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSkyPhObject
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
<LI><a href="#[10ad6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointNewStar
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
<LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[10a6288]"></a>_d2f</STRONG> (ARM, 168 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[10a6240]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[10a5de8]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[10a5da0]"></a>_dadd</STRONG> (ARM, 452 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a5e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[10a5d58]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[10cfbf0]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[10c94d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[10a4ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[10a5888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[10a5c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[10a5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[10c9160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[10cfa40]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[10c94d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[10a51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[10a5560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[10a6288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[10c9640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[10ce990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
</UL>

<P><STRONG><a name="[10cf8d8]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 128 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10c92d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[10a2d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[10a2f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[10cf890]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[10cf188]"></a>__fpl_fcmp_InfNaN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10c92d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[10a26c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[10a2950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[10cf140]"></a>__fpl_inf_fcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[10a58d0]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopeAltPos
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[10a5888]"></a>_ddiv</STRONG> (ARM, 464 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a57f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
<LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[10a5840]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[10a57f8]"></a>_ddiv_mantissas</STRONG> (ARM, 608 bytes, Stack size 28 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a5888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[10a2f68]"></a>__aeabi_cdcmpeq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10c3aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[10a2f20]"></a>_dcmpeq</STRONG> (ARM, 132 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[10a55a8]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10a5560]"></a>_dfix</STRONG> (ARM, 172 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[10a5518]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[10a5200]"></a>__aeabi_d2uiz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
</UL>

<P><STRONG><a name="[10a51b8]"></a>_dfixu</STRONG> (ARM, 132 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[10a5170]"></a>__fpl_inf_dfixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[10a4e58]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopeAltPos
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[10a4e10]"></a>_dflt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[10a4dc8]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a4d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[10a4d80]"></a>__aeabi_ui2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
</UL>

<P><STRONG><a name="[10a4d38]"></a>_dfltu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a4dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[10a2d48]"></a>__aeabi_cdcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[10a2d00]"></a>_dcmple</STRONG> (ARM, 132 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[10a4b28]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10abac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopeAltPos
<LI><a href="#[10abb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FGetTelescopePos
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10cdf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10a4ae0]"></a>_dmul</STRONG> (ARM, 460 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[10a4a98]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[10c9160]"></a>_drem</STRONG> (ARM, 496 bytes, Stack size 16 bytes, drem.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[10c9118]"></a>__fpl_inf_drem</STRONG> (ARM, 0 bytes, Stack size unknown bytes, drem.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[10a2b70]"></a>__aeabi_cdrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShow
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10ada40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointStarAlgorithm
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10c5330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[10a2b28]"></a>_drcmple</STRONG> (ARM, 156 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[10a5d10]"></a>__aeabi_drsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10a5cc8]"></a>_drsb</STRONG> (ARM, 24 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a5e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[10a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[10c9640]"></a>_dsqrt</STRONG> (ARM, 384 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[10cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[10c95f8]"></a>__fpl_inf_dsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[10a5c80]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSunSysObject
<LI><a href="#[10ad140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispPole
<LI><a href="#[10ad2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescopeNew
<LI><a href="#[10ad338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSRiseSettime
<LI><a href="#[10ad530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPointAlignStarOk
<LI><a href="#[10ad608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTowStarCal
<LI><a href="#[10ad650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FThreeStarCal
<LI><a href="#[10ad770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FReadTelescopePos
<LI><a href="#[10ad7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarRAPos
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
<LI><a href="#[10ad848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalStarAEPos
<LI><a href="#[10ad890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAlignStarAEPos
<LI><a href="#[10ad8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAirRefraction
<LI><a href="#[10ad920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoEQ
<LI><a href="#[10ad968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCalSiderealTime
<LI><a href="#[10adb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDriveTelescope
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10a5c38]"></a>_dsub</STRONG> (ARM, 572 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[10a5bf0]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[10cf640]"></a>__dunder</STRONG> (ARM, 272 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[10cf5f8]"></a>__dunder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[10a4978]"></a>__aeabi_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10ac0a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyMenu
<LI><a href="#[10ac9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FKeyEnter
<LI><a href="#[10aca80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FVerifyRaDecInput
<LI><a href="#[10acac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowBestObject
<LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10ad4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTwoStarAutoAlign
<LI><a href="#[10ad800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoAZ
</UL>

<P><STRONG><a name="[10a4930]"></a>_f2d</STRONG> (ARM, 96 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[10a48e8]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[10a44b8]"></a>__aeabi_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>

<P><STRONG><a name="[10a4470]"></a>_fadd</STRONG> (ARM, 260 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a4500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[10a4428]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[10cf458]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c94d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[10a3150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[10a3fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[10a4308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[10a4470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[10cf188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[10cf2f0]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c94d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[10a3880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[10a3c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[10a4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[10a3ff0]"></a>__aeabi_fdiv</STRONG> (ARM, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark
</UL>

<P><STRONG><a name="[10a3fa8]"></a>_fdiv</STRONG> (ARM, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[10a3f60]"></a>__fpl_inf_fdiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[10a3cd8]"></a>__aeabi_f2iz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
</UL>

<P><STRONG><a name="[10a3c90]"></a>_ffix</STRONG> (ARM, 112 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[10a3c48]"></a>__fpl_inf_ffix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[10a38c8]"></a>__aeabi_f2uiz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
</UL>

<P><STRONG><a name="[10a3880]"></a>_ffixu</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[10a3838]"></a>__fpl_inf_ffixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[10a34d0]"></a>__aeabi_i2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
</UL>

<P><STRONG><a name="[10a3488]"></a>_fflt</STRONG> (ARM, 92 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[10a3440]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a33b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[10a33f8]"></a>__aeabi_ui2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[10acd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputLandmark
<LI><a href="#[10acd50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FverifyInputStar
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10aead8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get88ConstellationInfo
</UL>

<P><STRONG><a name="[10a33b0]"></a>_ffltu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a3440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[10a2998]"></a>__aeabi_cfcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Called By]<UL><LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acc30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRaDecInputShow
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10acfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSysMainShowSet
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>

<P><STRONG><a name="[10a2950]"></a>_fcmple</STRONG> (ARM, 116 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cf188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[10a3198]"></a>__aeabi_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10a3150]"></a>_fmul</STRONG> (ARM, 260 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[10a3108]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[10cef60]"></a>__fpl_normalise2</STRONG> (ARM, 148 bytes, Stack size 0 bytes, fnorm2_noclz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[10c7578]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10c6cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[10c7530]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[10a2708]"></a>__aeabi_cfrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[10acb10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPlanetRise
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
<LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>

<P><STRONG><a name="[10a26c0]"></a>_frcmple</STRONG> (ARM, 128 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10cf188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[10a43e0]"></a>__aeabi_frsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[10ab9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10acf48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMenuShowSet
</UL>

<P><STRONG><a name="[10a4398]"></a>_frsb</STRONG> (ARM, 20 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a4500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[10a4548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[10a4350]"></a>__aeabi_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[10adfe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindAlignStar
</UL>

<P><STRONG><a name="[10a4308]"></a>_fsub</STRONG> (ARM, 356 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a4548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[10a42c0]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[10cedf0]"></a>__funder</STRONG> (ARM, 140 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[10ceda8]"></a>__funder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[10c8ff8]"></a>__ieee_status</STRONG> (ARM, 8 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
<LI><a href="#[10c8790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value (via Veneer)
<LI><a href="#[10d0d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via Veneer)
</UL>

<P><STRONG><a name="[10a2538]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via Veneer)
</UL>

<P><STRONG><a name="[10c94d8]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[10c92d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[10cf458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[10cfbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[10ce9d8]"></a>__ARM_scalbn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[10a12e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[10a15e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[10a19b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[10a2158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[10c3aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[10c47b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[10c8b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_dtoi
<LI><a href="#[10cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[10cda40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10cdcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10ce098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10ce990]"></a>scalbn</STRONG> (ARM, 108 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a6120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[10cfa40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[10ce948]"></a>__fpl_inf_scalbn</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[10c8e88]"></a>_scanf_real</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d0408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf (via Veneer)
</UL>

<P><STRONG><a name="[10c5d90]"></a>_scanf_hex_real</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10c5008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
</UL>

<P><STRONG><a name="[10c5d48]"></a>_scanf_infnan</STRONG> (ARM, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[10c4fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real (via Veneer)
</UL>

<P><STRONG><a name="[10c92d8]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[10c94d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[10cf188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c835b0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c835b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c835b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c83568]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c83568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c83568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c83520]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c83520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c83520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c834d8]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c834d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c834d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c83490]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c83490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c83490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c83448]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c83448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c83448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[10a7620]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[10a75d8]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[10a7590]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a7470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[10a5e78]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a5c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[10a5cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[10a5e30]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a5cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[10a5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[10a4548]"></a>_fadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a4308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[10a4398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[10a4500]"></a>_fsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a4398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[10a4470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[10d0d58]"></a>_fp_digits</STRONG> (Thumb, 486 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c8b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_dtoi (via Veneer)
<LI><a href="#[10c8ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via Veneer)
<LI><a href="#[10cb960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via Veneer)
<LI><a href="#[10cb9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via Veneer)
<LI><a href="#[10cbba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e (via Veneer)
<LI><a href="#[10cc308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[10cc6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d0cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[10d0408]"></a>_local_sscanf</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10c8e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d03c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[10c8790]"></a>_fp_value</STRONG> (Thumb, 536 bytes, Stack size 72 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10c5600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_itod (via Veneer)
<LI><a href="#[10c57b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_ll_mullu (via Veneer)
<LI><a href="#[10c8b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_dtoi (via Veneer)
<LI><a href="#[10c8ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via Veneer)
<LI><a href="#[10cb918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld (via Veneer)
<LI><a href="#[10cb9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd (via Veneer)
<LI><a href="#[10cc308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[10d1820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10c8748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[10c3b78]"></a>__ARM_isfinite</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ldexp.o(i.__ARM_isfinite))
<BR><BR>[Called By]<UL><LI><a href="#[10c3aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[10ca350]"></a>__ARM_exceptions_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca308]"></a>__Heap_DescSize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca2c0]"></a>__alloca_initialize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca278]"></a>__cpp_initialize__aeabi_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca230]"></a>__cxa_finalize</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[10a6120]"></a>__fpl_infinity</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10a3150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul (Weak Reference)
<LI><a href="#[10a3880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu (Weak Reference)
<LI><a href="#[10a3c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix (Weak Reference)
<LI><a href="#[10a3fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv (Weak Reference)
<LI><a href="#[10a4308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub (Weak Reference)
<LI><a href="#[10a4470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd (Weak Reference)
<LI><a href="#[10a4930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d (Weak Reference)
<LI><a href="#[10a4ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul (Weak Reference)
<LI><a href="#[10a51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu (Weak Reference)
<LI><a href="#[10a5560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix (Weak Reference)
<LI><a href="#[10a5888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv (Weak Reference)
<LI><a href="#[10a5c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub (Weak Reference)
<LI><a href="#[10a5da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd (Weak Reference)
<LI><a href="#[10a6288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f (Weak Reference)
<LI><a href="#[10c9160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem (Weak Reference)
<LI><a href="#[10c9640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (Weak Reference)
<LI><a href="#[10ce990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn (Weak Reference)
<LI><a href="#[10cf188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN (Weak Reference)
<LI><a href="#[10cf8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN (Weak Reference)
</UL>

<P><STRONG><a name="[10a66a0]"></a>__user_heap_extend</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a6778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL>

<P><STRONG><a name="[10ca1e8]"></a>_atexit_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca818]"></a>_call_atexit_fns</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL>

<P><STRONG><a name="[10ca1a0]"></a>_clock_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca158]"></a>_fp_trap_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca110]"></a>_get_lc_collate</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca0c8]"></a>_get_lc_monetary</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca080]"></a>_get_lc_time</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10ca038]"></a>_getenv_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10c9ff0]"></a>_init_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10c9fa8]"></a>_init_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10c9f60]"></a>_initio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10a8ce0]"></a>_printf_charcount</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8c98]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8c50]"></a>_printf_longlong_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8c08]"></a>_printf_longlong_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8bc0]"></a>_printf_longlong_oct</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8b78]"></a>_printf_mbtowc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8440]"></a>_printf_truncate_signed</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[10a83f8]"></a>_printf_truncate_unsigned</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
</UL>

<P><STRONG><a name="[10a8b30]"></a>_printf_wc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10a8ae8]"></a>_printf_wctomb</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a8ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[10c9f18]"></a>_rand_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10c9ed0]"></a>_signal_init</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL>

<P><STRONG><a name="[10c9e88]"></a>_terminate_user_alloc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>

<P><STRONG><a name="[10c9e40]"></a>_terminateio</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10ca3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL>
<HR></body></html>
